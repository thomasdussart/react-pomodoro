#!/usr/bin/env node
"use strict";var _util=require("util");var _path=_interopRequireDefault(require("path"));var _fs=_interopRequireDefault(require("fs"));var _enquirer=require("enquirer");var _chalk=_interopRequireDefault(require("chalk"));var _crossSpawn=require("cross-spawn");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const writeFile=(0,_util.promisify)(_fs.default.writeFile);const ESLINTRC=".eslintrc.js";const PRETTIERRC=".prettierrc";const PACKAGE_JSON="package.json";const{peerDependencies}=require("../package.json");(async()=>{const withHook=process.argv.includes("--with-hook")||process.argv.includes("--with-hooks");const withScripts=process.argv.includes("--with-script")||process.argv.includes("--with-scripts");const adds=[];withHook&&adds.push(`a ${_chalk.default.yellow("pre-commit")} hook`);withScripts&&adds.push(`a couple of ${_chalk.default.yellow("npm scripts")}`);const ok=await(0,_enquirer.confirm)({name:"ok",message:[`This will create the files ${_chalk.default.cyan(".eslintrc.js")} and ${_chalk.default.cyan(".prettierrc")} here and install the needed dependencies.`,adds.length?`It will also setup ${adds.join(" and ")}.`:"","Are you ok?"].join(" "),initial:false});if(!ok){console.log(_chalk.default.red("Abort."),"Bye.");process.exit();}await writeFile(_path.default.resolve(process.cwd(),ESLINTRC),`
module.exports = {
    extends: "@becode",
};`,"utf8");await writeFile(_path.default.resolve(process.cwd(),PRETTIERRC),`{
    "singleQuote": false,
    "tabWidth": 4,
    "trailingComma": "all",
    "bracketSpacing": false,
    "jsxBracketSameLine": true,
    "overrides": [
        {
            "files": "*.json",
            "options": {
                "tabWidth": 2
            }
        }
    ]
}`,"utf8");const dependencies=Object.keys(peerDependencies);withHook&&dependencies.push("husky","lint-staged");(0,_crossSpawn.sync)("npm",["i","--save-dev","@becode/eslint-config"].concat(dependencies),{stdio:"inherit"});if(withHook){const packagePath=_path.default.resolve(process.cwd(),PACKAGE_JSON);const packageProps=require(packagePath);if(withScripts){if(packageProps.scripts&&packageProps.scripts.lint){console.log("ü§î",`You already have a ${_chalk.default.cyan("lint")} script in your ${_chalk.default.yellow("package.json")}. Skip.`);}else{!packageProps.scripts&&(packageProps.scripts={});packageProps.scripts.lint="npx eslint --fix --cache src";console.log("üñê",`There's now a ${_chalk.default.cyan("lint")} script in your ${_chalk.default.yellow("package.json")}. This script assumes your files are in the ${_chalk.default.cyan("src")} folder. Correct the path in your package.json if needed.`);}}await writeFile(packagePath,JSON.stringify({...packageProps,"lint-staged":{"*.json":["npx prettier --write"],"*.js":["npx eslint --fix --cache"]},husky:{hooks:{"pre-commit":"npx lint-staged"}}},null,2),"utf8");}console.log("üéâ",_chalk.default.green("Success!"));})();